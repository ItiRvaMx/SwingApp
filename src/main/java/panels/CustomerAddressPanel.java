/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import core.gui.MessageDialog;
import entities.CustomerAddress;
import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.border.BevelBorder;
import utils.ValidationsNotifier;

/**
 *
 * @author astiservices
 */
public class CustomerAddressPanel extends javax.swing.JPanel {
    
    private CustomerAddress record;

    public CustomerAddressPanel(CustomerAddress record) {
        initComponents();
        anchorLabel.setText("");
        if (record != null) {
            txtName.setText(record.getName());
            txtStreet.setText(record.getStreet());
            txtZip.setText(record.getZip());
            chkStatus.setSelected(record.isActive());
        }
        this.record = record;
    }
    
    public CustomerAddress getAddress() {
        if (record == null)
            record = new CustomerAddress();
        record.setActive(chkStatus.isSelected());
        record.setName(txtName.getText());
        record.setStreet(txtStreet.getText());
        record.setZip(txtZip.getText());
        return record;
    }
    
    public boolean hasValidData() {
        if (txtName.getText().isEmpty())
            ValidationsNotifier.highlightMissingJTextField(txtName);
        if (txtStreet.getText().isEmpty())
            ValidationsNotifier.highlightMissingJTextField(txtStreet);
        if (txtZip.getText().isEmpty())
            ValidationsNotifier.highlightMissingJTextField(txtZip);
        return !txtStreet.getText().isEmpty() & !txtZip.getText().isEmpty() & !txtName.getText().isEmpty();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        anchorLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        chkStatus = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(418, 129));
        setPreferredSize(new java.awt.Dimension(418, 129));
        setLayout(new java.awt.GridBagLayout());

        anchorLabel.setText("*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(anchorLabel, gridBagConstraints);

        jLabel2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        jLabel2.setText("Calle línea 1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        add(jLabel2, gridBagConstraints);

        jLabel3.setText("C.P.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        add(jLabel3, gridBagConstraints);

        txtStreet.setPreferredSize(new java.awt.Dimension(300, 31));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(txtStreet, gridBagConstraints);

        txtZip.setPreferredSize(new java.awt.Dimension(70, 31));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(txtZip, gridBagConstraints);

        chkStatus.setSelected(true);
        chkStatus.setText("Activo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(chkStatus, gridBagConstraints);

        jLabel1.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        add(jLabel1, gridBagConstraints);

        txtName.setPreferredSize(new java.awt.Dimension(120, 31));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(txtName, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel anchorLabel;
    private javax.swing.JCheckBox chkStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables

    public static class AddressTab extends JPanel {

        public AddressTab(final String title, final JTabbedPane tabPane) {
            setLayout(new BorderLayout());
            setOpaque(false);
            
            JLabel titleLabel = new JLabel(title + "      ");
            add(titleLabel, BorderLayout.WEST);
            
            final JButton closeButton = new JButton(new ImageIcon(getClass().getResource("/no12.png")));
            closeButton.setBorder(null);
            closeButton.setBorderPainted(false);
            closeButton.setContentAreaFilled(false);
            closeButton.setOpaque(false);
            closeButton.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseEntered(MouseEvent me) {
                    closeButton.setBorderPainted(true);
                    closeButton.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
                }

                @Override
                public void mouseExited(MouseEvent me) {
                    closeButton.setBorderPainted(false);
                    closeButton.setBorder(null);
                }

                @Override
                public void mousePressed(MouseEvent me) {
                    closeButton.setBorder(BorderFactory.createBevelBorder(BevelBorder.LOWERED));
                }

                @Override
                public void mouseReleased(MouseEvent me) {
                    closeButton.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
                    int choice = MessageDialog.requestConfirmation(null, "Atención", "¿Desea eliminar esta dirección?");
                    if (choice == JOptionPane.YES_OPTION) {
                        int tabIndex = tabPane.indexOfTab(title);
                        tabPane.removeTabAt(tabIndex);
                    }
                }
            });
            closeButton.setIconTextGap(0);
            add(closeButton, BorderLayout.EAST);
            this.invalidate();
        }
    }
    
}